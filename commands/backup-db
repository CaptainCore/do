# ----------------------------------------------------
#  Performs a WordPress database-only backup to a secure, private directory.
# ----------------------------------------------------
function db_backup() {
    echo "Starting database-only backup..."
    local home_directory; home_directory=$(pwd); local private_directory=""
    if [ -d "_wpeprivate" ]; then private_directory="${home_directory}/_wpeprivate"; elif [ -d "../private" ]; then private_directory=$(cd ../private && pwd); elif [ -d "../tmp" ]; then private_directory=$(cd ../tmp && pwd); fi
    cd "$home_directory"
    if [[ -z "$private_directory" ]]; then echo "Error: Can't find a private directory." >&2; return 1; fi
    if ! command -v wp &> /dev/null; then echo "Error: wp-cli is not installed." >&2; return 1; fi
    local database_name; database_name=$(wp config get DB_NAME --skip-plugins --skip-themes --quiet); local database_username; database_username=$(wp config get DB_USER --skip-plugins --skip-themes --quiet); local database_password; database_password=$(wp config get DB_PASSWORD --skip-plugins --skip-themes --quiet);
    local dump_command; if command -v mariadb-dump &> /dev/null; then dump_command="mariadb-dump"; elif command -v mysqldump &> /dev/null; then dump_command="mysqldump"; else echo "Error: Neither mariadb-dump nor mysqldump could be found." >&2; return 1; fi
    echo "Using ${dump_command} for the backup."
    local backup_file="${private_directory}/database-backup-$(date +"%Y-%m-%d").sql"
    if ! "${dump_command}" -u"${database_username}" -p"${database_password}" --max_allowed_packet=512M --default-character-set=utf8mb4 --add-drop-table --single-transaction --quick --lock-tables=false "${database_name}" > "${backup_file}"; then echo "Error: Database dump failed." >&2; rm -f "${backup_file}"; return 1; fi
    chmod 600 "${backup_file}"; echo "âœ… Database backup complete!"; echo "   Backup file located at: ${backup_file}"
}